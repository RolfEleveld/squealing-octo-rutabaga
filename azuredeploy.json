{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountNamePrefix": {
      "type": "string",
      "defaultValue": "computedata",
      "metadata": {
        "description": "Unique DNS name prefix for the Storage Account where the Virtual Machine's disks will be placed"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage account type to be provisioned"
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "computecalc",
      "metadata": {
        "description": "Name of the virtual machine to process the data"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "computeroot",
      "metadata": {
        "description": "Administrator user name used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password used when provisioning virtual machines"
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "computepublic",
      "metadata": {
        "description": "The arbitrary DNS name of the public access to the virtual machine"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS1",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11"
      ],
      "metadata": {
        "description": "Virtual machine size to use for calculation"
      }
    },
    "sourceBlobPath": {
      "type": "string",
      "defaultValue": "//compute.blob.core.windows.net/fna/research",
      "metadata": {
        "description": "The network location of the source storage of the fna files"
      }
    },
    "sourceBlobFilesKey": {
      "type": "securestring",
      "defaultValue": "key ending in ==",
      "metadata": {
        "description": "The key to use to connect to source storage"
      }
    },
    "targetBlobPath": {
      "type": "string",
      "defaultValue": "//compute.blob.core.windows.net/fna/compute/20151222",
      "metadata": {
        "description": "The network location of the target storage where computed results are stored"
      }
    },
    "targetBlobFilesKey": {
      "type": "securestring",
      "defaultValue": "key ending in ==",
      "metadata": {
        "description": "The key to use to connect to target storage"
      }
    }
  },
  "variables": {
    "osImagePublisher": "ncbi",
    "osImageOffer": "ncbi-free-2-2-31",
    "osImageSKU": "free",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "vnet",
    "subnetName": "subnet",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "nsgName": "vnetsecuritygroup",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "installScriptUrl": "https://raw.githubusercontent.com/RolfEleveld/squealing-octo-rutabaga/master/deploythemachine.sh",
    "runScriptUrl": "https://raw.githubusercontent.com/RolfEleveld/squealing-octo-rutabaga/master/runthemachine.sh",
    "killScriptUrl": "https://raw.githubusercontent.com/RolfEleveld/squealing-octo-rutabaga/master/killthemachine.sh",
    "runCommand": "[concat('/bin/bash -c deploythemachine.sh -k ', parameters('sourceBlobFilesKey'), ' -s ', parameters('sourceBlobPath'), ' -l ', parameters('targetBlobFilesKey'), ' -t ', parameters('targetBlobPath') )]",
    "scriptsToDownload": [
      "[variables('installScriptUrl')]" //,
      //"[variables('runScriptUrl')]",
      //"[variables('killScriptUrl')]"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(parameters('storageAccountNamePrefix'))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "availability-set",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('dnsNameForPublicIP')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
      ]

    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'), '-nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('dnsNameForPublicIP'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('dnsNameForPublicIP'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','nodeslb'), '/backendAddressPools/', 'nodes-pool')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','nodeslb'), '/inboundNatRules/SSH-',parameters('vmName'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "nodeslb",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('dnsNameForPublicIP'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "nodesLbFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('dnsNameForPublicIP'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "node-pool"
          }
        ],
        "probes": [ ],
        "loadBalancingRules": [ ],
        "inboundNatRules": [
          {
            "name": "[concat('SSH-',parameters('vmName'))]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers', 'nodeslb')]"
              },
              "protocol": "tcp",
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',toLower(parameters('storageAccountNamePrefix')))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('vmName'), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', 'availability-set')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'availability-set')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-osdisk')]",
            "vhd": {
              "uri": "[concat('https://', toLower(parameters('storageAccountNamePrefix')), '.blob.core.windows.net/', parameters('vmName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/setupvm')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.*",
        "settings": {
          "fileUris": "[variables('scriptsToDownload')]",
          "commandToExecute": "[variables('runCommand')]"
        }
      }
    }
  ]
}
